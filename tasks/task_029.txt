# Task ID: 29
# Title: Marketing Email Templates
# Status: pending
# Dependencies: 26, 32
# Priority: medium
# Description: Create and implement marketing email templates (campaigns, promotions, educational content) using Unlayer (Task 32), following brand guidelines and respecting user preferences (Task 26).
# Details:
1. Design and implement the following marketing email templates using Unlayer:
   - Newsletter template
   - Promotion/sale announcement template
   - Free class invitation template
   - Educational content template
   - Product announcement template
2. Ensure templates follow Graceful Homeschooling brand guidelines
3. Implement responsive design using Unlayer's responsive editor
4. Add appropriate marketing content sections and layouts
5. Ensure clear call-to-action buttons
6. Implement template variables for personalization
7. Add required unsubscribe links and compliance elements
8. Reference Unlayer build notes from subtask 32.1 for template types ('Newsletter', 'Announcement', 'Marketing campaign')
9. Ensure templates respect user preferences as defined in Task 26

Note: The previous MJML implementation has been replaced with Unlayer as per Task 32. The example code below should be updated accordingly when implementing.

```typescript
// Example function to register marketing templates with Postmark using Unlayer HTML
async function registerMarketingTemplates() {
  const postmarkClient = new PostmarkClient(process.env.POSTMARK_API_TOKEN);
  
  // Promotion template
  const promotionHtml = await getUnlayerTemplateHtml('promotion-announcement');
  
  await postmarkClient.createTemplate({
    Name: 'Promotion Announcement',
    Subject: '{{promotionSubject}}',
    HtmlBody: promotionHtml,
    TextBody: 'Special offer for Graceful Homeschooling members! {{promotionOffer}} Use code: {{promotionCode}}. Offer valid until: {{expirationDate}}. {{promotionUrl}}',
    TemplateType: 'Standard'
  });
  
  // Similar code for other marketing templates...
}

// Function to retrieve HTML from Unlayer templates
async function getUnlayerTemplateHtml(templateName) {
  // Implementation will depend on how Unlayer templates are stored/retrieved
  // This could involve API calls to Unlayer or retrieving from database
}
```

# Test Strategy:
1. Test template rendering with various marketing content in Unlayer
2. Verify responsive design across different email clients
3. Test all links and buttons in templates
4. Validate template variables are correctly substituted
5. Test accessibility of email templates
6. Verify branding consistency across all templates
7. Test template loading times and size
8. Validate unsubscribe links and compliance elements
9. Verify templates respect user preference settings from Task 26
10. Test export and integration of Unlayer templates with email sending service
